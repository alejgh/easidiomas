version: "3.8"
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - event_bus

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    expose:
     - "9093"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_CREATE_TOPICS: "service_logs:1:1"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - event_bus
  
  topicmodeling:
    build: ../src/topicmodelingservice/
    ports:
      - "5001:5001"
    depends_on:
      - kafka
    networks:
      - event_bus
    environment:
      KAFKA_ENDPOINT: "kafka:9092"
      KAFKA_INPUT_TOPIC: "posts"
      KAFKA_LOGGING_TOPIC: "service_logs"
      POSTS_SERVICE_ENDPOINT: "posts_service:8888/soapws/posts.wsdl"
  
  postsservice:
    build: ../src/PostsService/
    ports:
      - "80:80"
    depends_on:
      - kafka
    networks:
      - event_bus
    environment:
      KAFKA_ENDPOINT: "kafka:9092"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:$ELK_VERSION
    volumes:
      - type: bind
        source: ./config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: $ELASTIC_PASSWORD
      discovery.type: single-node
    networks:
      - elk

  logstash:
    image: docker.elastic.co/logstash/logstash:$ELK_VERSION
    ports:
      - "5044:5044"
      - "5000:5000"
      - "9600:9600"
    volumes:
      - type: bind
        source: ./config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./config/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: $ELASTIC_PASSWORD
    networks:
      - elk
      - event_bus
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:$ELK_VERSION
    ports:
      - "5601:5601"
    volumes:
      - type: bind
        source: ./config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    environment:
      ELASTIC_PASSWORD: $ELASTIC_PASSWORD
    networks:
      - elk
    depends_on:
      - elasticsearch


networks:
  elk:
    driver: bridge
  event_bus:
    driver: bridge


volumes:
  elasticsearch: