plugins {
    id 'java'
    id 'org.springframework.boot' version '2.4.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'

    // Provide convenience executables for trying out the examples.
    id 'application'
    // ASSUMES GRADLE 5.6 OR HIGHER. Use plugin version 0.8.10 with earlier gradle versions
    id 'com.google.protobuf' version '0.8.15'
    // Generate IntelliJ IDEA's .idea & .iml project files
    id 'idea'
}

group 'com.easidiomas'
version '1.0'
sourceCompatibility = '1.8'
def grpcVersion = '1.35.0' // CURRENT_GRPC_VERSION
def protobufVersion = '3.12.0'
def protocVersion = protobufVersion

repositories {
    mavenCentral()
}

dependencies {
    def withoutX = {exclude group: 'org.slf4j', module: 'slf4j-log4j12'}

    // Springboot dependencies
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        exclude group: 'org.springframework.boot', module: 'logback-classic'
        //exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl'
    }

    implementation('org.springframework.boot:spring-boot-starter-actuator') {
        //exclude group: 'org.slf4j', module: 'slf4j-log4j12'
        //exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
        //exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl'
    }

    implementation('org.springframework.boot:spring-boot-starter-data-neo4j') {
        //exclude group: 'org.slf4j', module: 'slf4j-log4j12'
        //exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
        //exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl'
    }

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2'

    implementation('org.apache.kafka:kafka-log4j-appender') {
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
        //exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
        //exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl'
    }

    // https://mvnrepository.com/artifact/javax.activation/activation
    implementation group: 'javax.activation', name: 'activation', version: '1.1.1'
    // https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.0'
    // https://mvnrepository.com/artifact/com.sun.xml.bind/jaxb-core
    implementation group: 'com.sun.xml.bind', name: 'jaxb-core', version: '2.3.0'
    // https://mvnrepository.com/artifact/com.sun.xml.bind/jaxb-impl
    implementation group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.3.0'

    // https://mvnrepository.com/artifact/javax.xml.ws/jaxws-api
    implementation group: 'javax.xml.ws', name: 'jaxws-api', version: '2.3.1'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.0'

    compile "io.grpc:grpc-netty:${grpcVersion}"
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "io.grpc:grpc-stub:${grpcVersion}"
    compile group: 'com.google.protobuf', name: 'protobuf-java-util', version: '3.12.2'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-log4j2
    //implementation group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2', version: '2.4.3'

    // https://mvnrepository.com/artifact/org.apache.kafka/kafka-log4j-appender
    //implementation group: 'org.apache.kafka', name: 'kafka-log4j-appender', version: '1.0.0', withoutX

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

task runServer(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.easidiomas.auth.AuthServer'
}

task authServer(type: CreateStartScripts) {
    mainClassName = "icom.easidiomas.auth.AuthServer"
    applicationName = "auth-server"
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtime
}

startScripts.enabled = false