plugins {
    // Provide convenience executables for trying out the examples.
    id 'application'
    // ASSUMES GRADLE 5.6 OR HIGHER. Use plugin version 0.8.10 with earlier gradle versions
    id 'com.google.protobuf' version '0.8.15'
    // Generate IntelliJ IDEA's .idea & .iml project files
    id 'idea'
}

group 'com.easidiomas'
version '1.0'

repositories {
    maven { // The google mirror is less flaky than mavenCentral()
        url "https://maven-central.storage-download.googleapis.com/maven2/"
    }
    mavenLocal()
}

def grpcVersion = '1.35.0' // CURRENT_GRPC_VERSION
def protobufVersion = '3.12.0'
def protocVersion = protobufVersion

dependencies {
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.30'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-log4j2
    //implementation group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2', version: '2.4.3'

    //def withoutX = { exclude group: 'org.slf4j', module: 'slf4j-log4j12' }
    // https://mvnrepository.com/artifact/org.apache.kafka/kafka-log4j-appender
    //implementation group: 'org.apache.kafka', name: 'kafka-log4j-appender', version: '2.7.0', withoutX

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.1'



    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.0'

    compile "io.grpc:grpc-netty:${grpcVersion}"
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "io.grpc:grpc-stub:${grpcVersion}"
    compile group: 'com.google.protobuf', name: 'protobuf-java-util', version: '3.12.2'

    compileOnly group: "javax.annotation", name: "javax.annotation-api", version: "1.3.2"
    compileOnly group: "org.jetbrains", name: "annotations", version: "13.0"

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

task runServer(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.easidiomas.auth.AuthServer'
}

task authServer(type: CreateStartScripts) {
    mainClassName = "icom.easidiomas.auth.AuthServer"
    applicationName = "auth-server"
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtime
}

startScripts.enabled = false
